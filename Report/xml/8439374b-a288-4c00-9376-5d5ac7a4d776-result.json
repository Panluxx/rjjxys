{"name": "test_login", "status": "broken", "statusDetails": {"message": "TypeError: join() argument must be str, bytes, or os.PathLike object, not 'tuple'", "trace": "self = <TestCases.test_login.TestLogin object at 0x00000233B65BE310>\nopen_client = None\n\n    @pytest.mark.login\n    def test_login(self, open_client):\n        name = self.exists(get_path('账号'), img_doc='账号输入框')\n        if name:\n            name = (name[0] + 80, name[1])\n>           self.double_click(name, img_doc='双击用户名输入框')\n\nTestCases\\test_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\basepage.py:85: in double_click\n    raise e\nCommon\\basepage.py:79: in double_click\n    double_click(self.template(filepath, record_pos=record_pos, resolution=resolution, img_doc=img_doc))\nvenv\\lib\\site-packages\\airtest\\utils\\logwraper.py:122: in wrapper\n    res = f(*args, **kwargs)\nvenv\\lib\\site-packages\\airtest\\core\\api.py:386: in double_click\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\nvenv\\lib\\site-packages\\airtest\\utils\\logwraper.py:122: in wrapper\n    res = f(*args, **kwargs)\nvenv\\lib\\site-packages\\airtest\\core\\cv.py:59: in loop_find\n    G.LOGGING.info(\"Try finding: %s\", query)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1434: in info\n    self._log(INFO, msg, args, **kwargs)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1577: in _log\n    self.handle(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1587: in handle\n    self.callHandlers(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1649: in callHandlers\n    hdlr.handle(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:950: in handle\n    self.emit(record)\nvenv\\lib\\site-packages\\_pytest\\logging.py:342: in emit\n    super().emit(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1089: in emit\n    self.handleError(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:1081: in emit\n    msg = self.format(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:925: in format\n    return fmt.format(record)\nvenv\\lib\\site-packages\\_pytest\\logging.py:113: in format\n    return super().format(record)\nE:\\python3.8.5\\lib\\logging\\__init__.py:664: in format\n    record.message = record.getMessage()\nE:\\python3.8.5\\lib\\logging\\__init__.py:369: in getMessage\n    msg = msg % self.args\nvenv\\lib\\site-packages\\airtest\\core\\cv.py:150: in __repr__\n    filepath = self.filepath if PY3 else self.filepath.encode(sys.getfilesystemencoding())\nvenv\\lib\\site-packages\\airtest\\core\\cv.py:143: in filepath\n    filepath = os.path.join(dirname, self.filename)\nE:\\python3.8.5\\lib\\ntpath.py:117: in join\n    genericpath._check_arg_types('join', path, *paths)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfuncname = 'join', args = ('E:\\\\Git\\\\rjjxy\\\\TestCases', (857, 589))\nhasstr = True, hasbytes = False, s = (857, 589)\n\n    def _check_arg_types(funcname, *args):\n        hasstr = hasbytes = False\n        for s in args:\n            if isinstance(s, str):\n                hasstr = True\n            elif isinstance(s, bytes):\n                hasbytes = True\n            else:\n>               raise TypeError(f'{funcname}() argument must be str, bytes, or '\n                                f'os.PathLike object, not {s.__class__.__name__!r}') from None\nE               TypeError: join() argument must be str, bytes, or os.PathLike object, not 'tuple'\n\nE:\\python3.8.5\\lib\\genericpath.py:152: TypeError"}, "attachments": [{"name": "双击用户名输入框", "source": "ecf5c487-ea5a-4ba3-a17f-02320c6dd70d-attachment.png", "type": "image/png"}, {"name": "log", "source": "7dad329d-9783-4403-8857-7076c79e90a9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "251f2e59-6757-4758-845b-2dc44f404de7-attachment.txt", "type": "text/plain"}], "start": 1667374687115, "stop": 1667374689484, "uuid": "d1ea49d5-c2c3-4ebe-bdf3-ca81f2f441ac", "historyId": "0598ee52662104f36194376c5690f584", "testCaseId": "834c0cf788ac59bcddad40943dc8846f", "fullName": "TestCases.test_login.TestLogin#test_login", "labels": [{"name": "tag", "value": "login"}, {"name": "tag", "value": "@pytest.mark.usefixtures('open_client')"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "gtx650-ani"}, {"name": "thread", "value": "12924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_login"}]}