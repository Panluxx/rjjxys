{"name": "test_case_01", "status": "broken", "statusDetails": {"message": "airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\wul_8s\\\\experiment\\\\关闭.png) not found in screen'", "trace": "self = <TestCases.test_wul_8s.test_02_experiment.TestExperiment object at 0x0000025BA359A0A0>\nlogin = None\n\n    @pytest.mark.courseware\n    def test_case_01(self, login):\n        self.touch(get_path('学科筛选框'), img_doc='点击学科筛选框')\n        self.touch(get_path('物理'), img_doc='选择物理学科')\n        self.touch(get_path('书本封面'), img_doc='点击书本封面')\n        sleep(1)\n        self.touch(get_path('探究实验'), img_doc='点击探究实验')\n        sleep(1)\n        self.touch(get_path('展开章节'), img_doc='点击展开章节')\n        self.assert_exists(get_path('展开后章节'))\n        self.touch(get_path('资源封面'), img_doc='点击资源')\n        sleep(1)\n        self.assert_exists(get_path('资源内容'), img_doc='检查资源是否正常打开')\n        sleep(5)\n        # 移动到工具栏位置\n        move(coords=(1890, 990))\n>       self.touch(get_path('关闭'), img_doc='点击关闭')\n\nTestCases\\test_wul_8s\\test_02_experiment.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\basepage.py:54: in touch\n    raise e\nCommon\\basepage.py:46: in touch\n    touch(self.template(filepath, threshold=threshold, record_pos=record_pos, resolution=resolution,\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\api.py:363: in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(E:\\Git\\rjjxys\\Picture\\wul_8s\\experiment\\关闭.png), timeout = 20\nthreshold = None, interval = 0.5, intervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding: %s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\wul_8s\\\\experiment\\\\关闭.png) not found in screen'\n\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\cv.py:80: TargetNotFoundError"}, "attachments": [{"name": "点击关闭", "source": "28556be8-a822-4162-964a-eb251546b392-attachment.png", "type": "image/png"}, {"name": "log", "source": "e1f96353-01d4-45e1-b8f9-19b5b5dbfa0a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5dee9858-3b5c-4fda-9642-49068f2b58c5-attachment.txt", "type": "text/plain"}], "start": 1741912817934, "stop": 1741912864769, "uuid": "8b873547-9060-4c9e-a5a5-96b826308341", "historyId": "42af96c185b27f882dc747e5a5ba8ddb", "testCaseId": "42af96c185b27f882dc747e5a5ba8ddb", "fullName": "TestCases.test_wul_8s.test_02_experiment.TestExperiment#test_case_01", "labels": [{"name": "tag", "value": "courseware"}, {"name": "parentSuite", "value": "TestCases.test_wul_8s"}, {"name": "suite", "value": "test_02_experiment"}, {"name": "subSuite", "value": "TestExperiment"}, {"name": "host", "value": "gtx650-ani"}, {"name": "thread", "value": "972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_wul_8s.test_02_experiment"}]}