{"name": "test_create_folder", "status": "broken", "statusDetails": {"message": "airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'", "trace": "open_client = None\n\n    @pytest.fixture(scope='function')\n    def login(open_client):\n        basepage = BasePage()\n        if basepage.exists(get_path('未勾选'), img_doc='未勾选'):\n            name = basepage.exists(get_path('账号'), img_doc='账号')\n            if name:\n                name = (name[0] + 80, name[1])\n                double_click(name)\n            else:\n                basepage.touch(get_path('输入用户名'), img_doc='点击用户名输入框')\n            sleep(2)\n            basepage.text(username, img_doc='输入用户名{username}')\n            # 有就清空，没有就直接输入\n            if basepage.exists(get_path('清空密码'), img_doc='密码输入框'):\n                basepage.double_click(get_path('清空密码'), img_doc='双击密码输入框')\n            else:\n                # 密码输入框\n                basepage.touch(get_path('输入密码'), img_doc='点击密码输入框')\n            sleep(2)\n            basepage.text(password, img_doc=f'输入密码{password}')\n            # 记住密码\n            if basepage.exists(get_path('未勾选'), img_doc='记住密码未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选记住密码')\n            sleep(2)\n            # 勾选协议\n            if basepage.exists(get_path('未勾选'), img_doc='记住协议未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选并同意协议')\n            sleep(2)\n        # 登录\n>       basepage.touch(get_path('登录'), img_doc='点击登录')\n\nTestCases\\conftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\basepage.py:54: in touch\n    raise e\nCommon\\basepage.py:46: in touch\n    touch(self.template(filepath, threshold=threshold, record_pos=record_pos, resolution=resolution,\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\api.py:363: in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(E:\\Git\\rjjxys\\Picture\\login\\登录.png), timeout = 20\nthreshold = None, interval = 0.5, intervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding: %s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'\n\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\cv.py:80: TargetNotFoundError"}, "attachments": [{"name": "log", "source": "756a432f-7fec-4829-9b48-28af44279109-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d796a516-f65c-4993-a5f4-563637b3724c-attachment.txt", "type": "text/plain"}], "start": 1742288332975, "stop": 1742288332975, "uuid": "6d8b3197-7eba-4173-b74b-72a1c3ea7c11", "historyId": "3a5b2f547e8928d41a01f82d188a9a03", "testCaseId": "3a5b2f547e8928d41a01f82d188a9a03", "fullName": "TestCases.test_my_resources.test_resources.TestResources#test_create_folder", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login')"}, {"name": "parentSuite", "value": "TestCases.test_my_resources"}, {"name": "suite", "value": "test_resources"}, {"name": "subSuite", "value": "TestResources"}, {"name": "host", "value": "gtx650-ani"}, {"name": "thread", "value": "3572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_my_resources.test_resources"}]}