{
  "uid" : "e69ea62e934d5957",
  "name" : "test_create_folder",
  "fullName" : "TestCases.test_my_resources.test_resources.TestResources#test_create_folder",
  "historyId" : "3a5b2f547e8928d41a01f82d188a9a03",
  "time" : {
    "start" : 1742288332975,
    "stop" : 1742288332975,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'",
  "statusTrace" : "open_client = None\n\n    @pytest.fixture(scope='function')\n    def login(open_client):\n        basepage = BasePage()\n        if basepage.exists(get_path('未勾选'), img_doc='未勾选'):\n            name = basepage.exists(get_path('账号'), img_doc='账号')\n            if name:\n                name = (name[0] + 80, name[1])\n                double_click(name)\n            else:\n                basepage.touch(get_path('输入用户名'), img_doc='点击用户名输入框')\n            sleep(2)\n            basepage.text(username, img_doc='输入用户名{username}')\n            # 有就清空，没有就直接输入\n            if basepage.exists(get_path('清空密码'), img_doc='密码输入框'):\n                basepage.double_click(get_path('清空密码'), img_doc='双击密码输入框')\n            else:\n                # 密码输入框\n                basepage.touch(get_path('输入密码'), img_doc='点击密码输入框')\n            sleep(2)\n            basepage.text(password, img_doc=f'输入密码{password}')\n            # 记住密码\n            if basepage.exists(get_path('未勾选'), img_doc='记住密码未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选记住密码')\n            sleep(2)\n            # 勾选协议\n            if basepage.exists(get_path('未勾选'), img_doc='记住协议未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选并同意协议')\n            sleep(2)\n        # 登录\n>       basepage.touch(get_path('登录'), img_doc='点击登录')\n\nTestCases\\conftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\basepage.py:54: in touch\n    raise e\nCommon\\basepage.py:46: in touch\n    touch(self.template(filepath, threshold=threshold, record_pos=record_pos, resolution=resolution,\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\api.py:363: in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(E:\\Git\\rjjxys\\Picture\\login\\登录.png), timeout = 20\nthreshold = None, interval = 0.5, intervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding: %s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'\n\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\cv.py:80: TargetNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1742288333572,
      "stop" : 1742288363024,
      "duration" : 29452
    },
    "status" : "broken",
    "statusMessage" : "airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'\n",
    "statusTrace" : "  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"E:\\Git\\rjjxys\\TestCases\\conftest.py\", line 72, in login\n    basepage.touch(get_path('登录'), img_doc='点击登录')\n  File \"E:\\Git\\rjjxys\\Common\\basepage.py\", line 54, in touch\n    raise e\n  File \"E:\\Git\\rjjxys\\Common\\basepage.py\", line 46, in touch\n    touch(self.template(filepath, threshold=threshold, record_pos=record_pos, resolution=resolution,\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 124, in wrapper\n    res = f(*args, **kwargs)\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\api.py\", line 363, in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 124, in wrapper\n    res = f(*args, **kwargs)\n  File \"E:\\Git\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\cv.py\", line 80, in loop_find\n    raise TargetNotFoundError('Picture %s not found in screen' % query)\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f3faa459945d88bc",
      "name" : "点击登录",
      "source" : "f3faa459945d88bc.png",
      "type" : "image/png",
      "size" : 2413014
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  }, {
    "name" : "open_client",
    "time" : {
      "start" : 1742288332975,
      "stop" : 1742288333571,
      "duration" : 596
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'",
    "statusTrace" : "open_client = None\n\n    @pytest.fixture(scope='function')\n    def login(open_client):\n        basepage = BasePage()\n        if basepage.exists(get_path('未勾选'), img_doc='未勾选'):\n            name = basepage.exists(get_path('账号'), img_doc='账号')\n            if name:\n                name = (name[0] + 80, name[1])\n                double_click(name)\n            else:\n                basepage.touch(get_path('输入用户名'), img_doc='点击用户名输入框')\n            sleep(2)\n            basepage.text(username, img_doc='输入用户名{username}')\n            # 有就清空，没有就直接输入\n            if basepage.exists(get_path('清空密码'), img_doc='密码输入框'):\n                basepage.double_click(get_path('清空密码'), img_doc='双击密码输入框')\n            else:\n                # 密码输入框\n                basepage.touch(get_path('输入密码'), img_doc='点击密码输入框')\n            sleep(2)\n            basepage.text(password, img_doc=f'输入密码{password}')\n            # 记住密码\n            if basepage.exists(get_path('未勾选'), img_doc='记住密码未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选记住密码')\n            sleep(2)\n            # 勾选协议\n            if basepage.exists(get_path('未勾选'), img_doc='记住协议未勾选'):\n                basepage.touch(get_path('未勾选'), img_doc='勾选并同意协议')\n            sleep(2)\n        # 登录\n>       basepage.touch(get_path('登录'), img_doc='点击登录')\n\nTestCases\\conftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\basepage.py:54: in touch\n    raise e\nCommon\\basepage.py:46: in touch\n    touch(self.template(filepath, threshold=threshold, record_pos=record_pos, resolution=resolution,\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\api.py:363: in touch\n    pos = loop_find(v, timeout=ST.FIND_TIMEOUT)\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = Template(E:\\Git\\rjjxys\\Picture\\login\\登录.png), timeout = 20\nthreshold = None, interval = 0.5, intervalfunc = None\n\n    @logwrap\n    def loop_find(query, timeout=ST.FIND_TIMEOUT, threshold=None, interval=0.5, intervalfunc=None):\n        \"\"\"\n        Search for image template in the screen until timeout\n    \n        Args:\n            query: image template to be found in screenshot\n            timeout: time interval how long to look for the image template\n            threshold: default is None\n            interval: sleep interval before next attempt to find the image template\n            intervalfunc: function that is executed after unsuccessful attempt to find the image template\n    \n        Raises:\n            TargetNotFoundError: when image template is not found in screenshot\n    \n        Returns:\n            TargetNotFoundError if image template not found, otherwise returns the position where the image template has\n            been found in screenshot\n    \n        \"\"\"\n        G.LOGGING.info(\"Try finding: %s\", query)\n        start_time = time.time()\n        while True:\n            screen = G.DEVICE.snapshot(filename=None, quality=ST.SNAPSHOT_QUALITY)\n    \n            if screen is None:\n                G.LOGGING.warning(\"Screen is None, may be locked\")\n            else:\n                if threshold:\n                    query.threshold = threshold\n                match_pos = query.match_in(screen)\n                if match_pos:\n                    try_log_screen(screen)\n                    return match_pos\n    \n            if intervalfunc is not None:\n                intervalfunc()\n    \n            # 超时则raise，未超时则进行下次循环:\n            if (time.time() - start_time) > timeout:\n                try_log_screen(screen)\n>               raise TargetNotFoundError('Picture %s not found in screen' % query)\nE               airtest.core.error.TargetNotFoundError: 'Picture Template(E:\\\\Git\\\\rjjxys\\\\Picture\\\\login\\\\登录.png) not found in screen'\n\n..\\rjjxy\\venv\\lib\\site-packages\\airtest\\core\\cv.py:80: TargetNotFoundError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bd947096ea898ba7",
      "name" : "log",
      "source" : "bd947096ea898ba7.txt",
      "type" : "text/plain",
      "size" : 12578
    }, {
      "uid" : "d31cb97e2cb4d970",
      "name" : "stderr",
      "source" : "d31cb97e2cb4d970.txt",
      "type" : "text/plain",
      "size" : 12106
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "open_client::0",
    "time" : {
      "start" : 1742288363080,
      "stop" : 1742288365086,
      "duration" : 2006
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('login')"
  }, {
    "name" : "parentSuite",
    "value" : "TestCases.test_my_resources"
  }, {
    "name" : "suite",
    "value" : "test_resources"
  }, {
    "name" : "subSuite",
    "value" : "TestResources"
  }, {
    "name" : "host",
    "value" : "gtx650-ani"
  }, {
    "name" : "thread",
    "value" : "3572-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_my_resources.test_resources"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e543c04e8592a62c",
      "status" : "failed",
      "statusDetails" : "Failed: ScopeMismatch: You tried to access the function scoped fixture login with a module scoped request object, involved factories:\nTestCases\\test_my_resources\\test_resources.py:27:  def del_resources(login)\nTestCases\\conftest.py:43:  def login(open_client)",
      "time" : {
        "start" : 1741912521776,
        "stop" : 1741912521776,
        "duration" : 0
      }
    }, {
      "uid" : "dde0a44a0e41c31a",
      "status" : "broken",
      "statusDetails" : "airtest.aircv.error.FileNotExistError: File not exist: E:\\Git\\rjjxys\\Picture\\resources\\我的资源.png",
      "time" : {
        "start" : 1741245948173,
        "stop" : 1741245948173,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('login')" ]
  },
  "source" : "e69ea62e934d5957.json",
  "parameterValues" : [ ]
}